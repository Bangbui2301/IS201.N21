delimiter //
-- SHOW PROCEDURE STATUS WHERE Db = 'cybershark';

-- 1. In tên thông tin sản phẩm (Xuất ra console log để demo cho thầy)(CHO SAN_PHAM)
CREATE PROCEDURE STP_INTHONGTINSP(IN V_MASP_IN INT )
BEGIN
	DECLARE V_THUONG_HIEU NVARCHAR(255);
    DECLARE V_TEN_SAN_PHAM NVARCHAR(255);
    DECLARE V_TEN_LOAI_SAN_PHAM NVARCHAR(255);
    DECLARE V_SO_LUONG INT;
    DECLARE V_DON_GIA FLOAT;
    
    SELECT TEN_SAN_PHAM, TEN_LOAI_SAN_PHAM, TEN_THUONG_HIEU, DON_GIA, SO_LUONG
    INTO V_TEN_SAN_PHAM, V_TEN_LOAI_SAN_PHAM, V_THUONG_HIEU, V_DON_GIA, V_SO_LUONG
    FROM SAN_PHAM SP, LOAI_SAN_PHAM LSP, THUONG_HIEU TH
    WHERE SP.MA_SAN_PHAM = V_MASP_IN
		AND TH.MA_THUONG_HIEU = SP.MA_THUONG_HIEU
        AND SP.MA_LOAI_SAN_PHAM = LSP.MA_LOAI_SAN_PHAM;
	
    DROP TEMPORARY TABLE IF EXISTS DISPLAY;
    
    CREATE TEMPORARY TABLE DISPLAY(
		COLLUM1 NVARCHAR(255),
        COLLUM2 NVARCHAR(255)
        );
        
	INSERT INTO DISPLAY
		(COLLUM1, COLLUM2)
	VALUES
		('Tên sản phẩm: ', V_TEN_SAN_PHAM),
		('Loại sản phẩm: ', V_TEN_LOAI_SAN_PHAM),
		('Thương hiệu: ', V_THUONG_HIEU),
		('Đơn giá: ', CAST(V_DON_GIA AS NCHAR));
	    
    IF V_SO_LUONG = 0 THEN
		INSERT INTO DISPLAY VALUES ('Số lượng:', 'Hết hàng!');
	ELSE INSERT INTO DISPLAY VALUES ('Số lượng:', CAST(V_SO_LUONG AS NCHAR));
    END IF;
    
    SELECT * FROM DISPLAY;
END //

-- 2. In thông tin khách khàng, tài khoản và các hóa đơn đã mua của tài khoản đó (CHO KHACH_HANG)
CREATE PROCEDURE STP_INTHONGTINKH(IN V_MAKH_IN INT)
BEGIN
	DECLARE V_TEN_KH NVARCHAR(255);
    DECLARE V_NGAY_SINH DATETIME;
    DECLARE V_GIOI_TINH NVARCHAR(5);
    DECLARE V_SO_DT CHAR(9);
    DECLARE V_DIA_CHI_EMAIL VARCHAR(255);
    DECLARE V_DIEM_TL INT;
    DECLARE V_LOAI_KHACH_HANG NVARCHAR(50);
    DECLARE V_DOANH_THU DECIMAL(19,4);
    DECLARE V_MA_DH INT;
    DECLARE V_NGAY_LAP DATETIME;
    DECLARE V_TRI_GIA FLOAT;
    
	DECLARE done INT DEFAULT FALSE;
    DECLARE DON_HANG_CURSOR CURSOR FOR
		SELECT MA_DON_HANG, NGAY_TAO, TRI_GIA
        FROM DON_HANG
        WHERE MA_KHAH_HANG = V_MAKH_IN;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE ;
    
    DROP TEMPORARY TABLE IF EXISTS DISPLAY1;
    DROP TEMPORARY TABLE IF EXISTS DISPLAY2;
    
    CREATE TEMPORARY TABLE DISPLAY1(
		COLLUM1 NVARCHAR(255),
        COLLUM2 NVARCHAR(255)
        );
        
	CREATE TEMPORARY TABLE DISPLAY2(
		MA_DH NVARCHAR(255),
        NGAY_LAP DATETIME,
        TRI_GIA FLOAT
        );
    
    SELECT CONCAT(HO_KHACH_HANG,' ', TEN_KHACH_HANG), NGAY_SINH, 
		GIOI_TINH, SO_DIEN_THOAI, DIA_CHI_EMAIL, DIEM_TICH_LUY, LOAI_KHACH_HANG
	INTO V_TEN_KH, V_NGAY_SINH, V_GIOI_TINH, V_SO_DT,
		V_DIA_CHI_EMAIL, V_DIEM_TL, V_LOAI_KHACH_HANG
	FROM KHACH_HANG
    WHERE MA_KHACH_HANG = V_MAKH_IN;
    
    INSERT INTO DISPLAY1
		VALUES ('Họ tên khách hàng: ', V_TEN_KH),
			   ('Ngày sinh: ', CAST(V_NGAY_SINH AS NCHAR)),
               ('Giới tính: ', V_GIOI_TINH),
               ('Số điện thoại: ', CAST(V_SO_DT AS NCHAR)),
               ('Địa chỉ Email: ', CAST(V_DIA_CHI AS NCHAR)),
               ('Điểm tích lũy: ', CAST(V_DIA_CHI_EMAIL AS NCHAR)),
               ('Loại khách hàng: ', V_LOAI_KHACH_HANG);
    
    OPEN DON_HANG_CURSOR;
    
    getHoaDon: LOOP
		FETCH DON_HANG_CURSOR INTO V_MA_DH, V_NGAY_LAP, V_TRI_GIA;
        IF done THEN LEAVE getHoaDon;
		END IF;
        INSERT INTO DISPLAY2 VALUES (V_MA_DH, V_NGAY_LAP, V_TRI_GIA);
    END LOOP getHoaDon;
    
    CLOSE DON_HANG_CURSOR;
    
    SELECT * FROM DISPLAY1;
    SELECT * FROM DISPLAY2;
END //

-- 3. Thêm sản phẩm (CHO SAN_PHAM)
CREATE PROCEDURE STP_INSERT_SANPHAM (
	IN V_TENSP NVARCHAR(255),
    IN V_GIA_NHAP FLOAT,
	IN V_MO_TA VARCHAR(4096),
	IN V_SO_LUONG INT,
	IN V_DON_GIA FLOAT,
	IN V_MA_LOAI_SAN_PHAM INT,
	IN V_MA_TH INT
    )
BEGIN
	IF V_MO_TA = '' THEN SET V_MO_TA = 'default-value'; 
    END IF;
    INSERT INTO SAN_PHAM (TEN_SAN_PHAM, GIA_NHAP,  MO_TA, SO_LUONG, DON_GIA, MA_LOAI_SAN_PHAM, MA_THUONG_HIEU, ENABLED, MAIN_IMAGE)
    VALUES(V_TENSP, V_GIA_NHAP, V_MO_TA, V_SO_LUONG, V_DON_GIA, V_MA_LOAI_SAN_PHAM, V_MA_TH, 1, '');
END //

-- 4. Sửa sản phẩm (CHO SAN_PHAM)
CREATE PROCEDURE STP_UPDATE_SANPHAM(
	IN V_MASP INT,
    IN V_TENSP NVARCHAR(255),
	IN V_MO_TA TEXT,
	IN V_SO_LUONG INT,
	IN V_DON_GIA FLOAT,
	IN V_MA_LOAI_SAN_PHAM INT,
	IN V_MA_THUONG_HIEU INT
    )
BEGIN
	IF V_MO_TA = '' THEN SET V_MO_TA = 'default-value'; 
    END IF;
    UPDATE SAN_PHAM
    SET TEN_SAN_PHAM = V_TENSP, MO_TA = V_MO_TA, SO_LUONG = V_SO_LUONG, DON_GIA = V_DON_GIA, 
		MA_LOAI_SAN_PHAM = V_MA_LOAI_SAN_PHAM, MA_THUONG_HIEU = V_MA_THUONG_HIEU
	WHERE MA_SAN_PHAM = V_MASP;
END //

-- 5. Thêm địa chỉ (CHO DIA_CHI)
CREATE PROCEDURE STP_INSERT_DIACHI(
	IN V_ID_KHACH_HANG INT,
	IN V_DIA_CHI_1 VARCHAR(64),
    IN V_DIA_CHI_2 VARCHAR(64),
	IN V_TPHO NVARCHAR (50),
    IN V_HO_NGUOI_NHAN VARCHAR(45),
    IN V_TEN_NGUOI_NHAN VARCHAR(45),
    IN V_SODT VARCHAR(15),
	IN V_MAC_DINH bit
    )
BEGIN
	IF V_MAC_DINH = 1 THEN
		UPDATE DIA_CHI
        SET MAC_DINH = 0
        WHERE MA_KHACH_HANG = V_ID_KHACH_HANG;
        
        INSERT INTO DIA_CHI (MA_KHACH_HANG, DIA_CHI_1, DIA_CHI_2,THANHPHO_TINH, HO_NGUOI_NHAN, TEN_NGUOI_NHAN, SO_DIEN_THOAI, MAC_DINH) 
        VALUES (V_ID_KHACH_HANG, V_DIA_CHI_1, V_DIA_CHI_2, V_TPHO, V_HO_NGUOI_NHAN, V_TEN_NGUOI_NHAN, V_SODT, 1);
	ELSE INSERT INTO DIA_CHI (MA_KHACH_HANG, DIA_CHI_1, DIA_CHI_2,THANHPHO_TINH, HO_NGUOI_NHAN, TEN_NGUOI_NHAN, SO_DIEN_THOAI, MAC_DINH) 
         VALUES (V_ID_KHACH_HANG, V_DIA_CHI_1, V_DIA_CHI_2, V_TPHO, V_HO_NGUOI_NHAN, V_TEN_NGUOI_NHAN, V_SODT, 0);
    END IF;
END //

-- 6. Tính tổng tiền hàng trong giỏ hàng (CHO CTGH)
CREATE PROCEDURE STP_TINH_TONG_CTGH (IN V_MAGH INT, OUT V_TONG_TIEN_HANG FLOAT)
BEGIN
	SELECT TONG_TIEN INTO V_TONG_TIEN_HANG
    FROM GIO_HANG
    WHERE MA_GIO_HANG = V_MAGH;
END //

-- 7. Thêm chi tiết giỏ hàng (CHO CTGH)
CREATE PROCEDURE STP_INSERT_CTGH(
	IN V_IDKH INT,
	IN V_IDSP INT,
	IN V_SL INT
    )
BEGIN
	INSERT INTO CTGH (MA_KH, MA_SP, SO_LUONG) VALUES(V_IDKH, V_IDSP, V_SL);
END //

-- 8. Sửa số lượng của 1 sản phẩm trong giỏ hàng. (CHO CTGH)
CREATE PROCEDURE STP_UPDATE_CTGH(
	IN V_IDKH INT,
	IN V_IDSP INT,
	IN V_NEWSL INT
    )
BEGIN
	UPDATE CTGH
	SET SO_LUONG = V_NEWSL
	WHERE MA_KH = V_IDKH
		AND MA_SP = V_IDSP;
END //

-- 9. Xóa sản phẩm ra khỏi chi tiết giỏ hàng (CHO CTGH)
CREATE PROCEDURE STP_DELETE_CTGH(
	IN V_IDKH INT,
	IN V_IDSP INT
    )
BEGIN
	DELETE FROM CTGH
	WHERE MA_KH = V_IDKH
		AND MA_SP = V_IDSP;
END //

-- 10. Thêm tin tức mới (CHO TIN_TUC)
CREATE PROCEDURE STP_INSERT_TINTUC (
	IN V_TIEUDE NVARCHAR(100),
    IN V_HINH_ANH VARCHAR(100),
    IN V_MOTA TEXT
    )
BEGIN
	INSERT INTO TIN_TUC (TIEU_DE, MO_TA, HINH_ANH)
    VALUES (V_TIEU_DE, V_MOTA, V_HINH_ANH);
END //

-- 11. Cập nhật tin tức (CHO TIN_TUC)
CREATE PROCEDURE STP_UPDATE_TINTUC (
	IN V_MA_TT INT,
	IN V_TIEUDE NVARCHAR(100),
    IN V_HINH_ANH VARCHAR(100),
    IN V_MOTA TEXT
    )
BEGIN
	UPDATE TIN_TUC
    SET TIEU_DE = V_TIEUDE, HINH_ANH = V_HINH_ANH, MO_TA = V_MOTA
    WHERE MA_TIN_TUC = V_MA_TT;
END //

-- 12. Thêm một đánh giá mới (CHO DANH_GIA)
CREATE PROCEDURE STP_INSERT_DANHGIA(
	IN V_MA_KHACH_HANG INT,
	IN V_MA_SP INT,
	IN V_DANH_GIA FLOAT,
	IN V_BINH_LUAN TEXT
    )
BEGIN
	INSERT INTO PHAN_HOI (MA_KHACH_HANG, MA_SAN_PHAM, DANH_GIA, BINH_LUAN)
		VALUES (V_MA_KHACH_HANG, V_MA_SP, V_DANH_GIA, V_BINH_LUAN);
END //

-- 13. Thêm thương hiệu (CHO THUONG_HIEU)
CREATE PROCEDURE STP_INSERT_THUONGHIEU(
	IN V_THUONG_HIEU NVARCHAR(255),
    IN V_HINH_ANH VARCHAR(100)
    )
BEGIN
	INSERT INTO THUONG_HIEU (TEN_THUONG_HIEU, HINH_ANH)
		VALUES (V_THUONG_HIEU, V_HINH_ANH);
END //

-- 14. Thêm voucher giảm giá (CHO VOUCHER)
CREATE PROCEDURE STP_INSERT_VOUCHER (
	IN V_MA_GIAM_GIA VARCHAR(8),
    IN V_TEN_MAGG NVARCHAR(255),
	IN V_PHAN_TRAM FLOAT,
	IN V_NGAY_HET_HAN DATETIME
    )
BEGIN
	INSERT INTO VOUCHER (MA_GIAM_GIA, TEN_MA_GIAM_GIA, PHAN_TRAM_GIAM_GIA, NGAY_HET_HAN)
		VALUES (V_MA_GIAM_GIA, V_TEN_MAGG, V_PHAN_TRAM, V_NGAY_HET_HAN);
END //

-- 15. Thêm khách hàng với tên đăng nhập là email của khách đó (CHO KHACH_HANG)
CREATE PROCEDURE STP_INSERT_KHACHHANG (
	IN V_HO_KH NVARCHAR(50) ,
	IN V_TEN_KH NVARCHAR(50) ,
	IN V_SODT VARCHAR(15) ,
	IN V_DIA_CHI_EMAIL VARCHAR(255) ,
	IN V_MK VARCHAR(64),
    IN V_DIA_CHI_1 VARCHAR(64),
    IN V_DIA_CHI_2 VARCHAR(64),
    IN V_TP VARCHAR(45)
    )
BEGIN
	INSERT INTO KHACH_HANG 
    (DIA_CHI_EMAIL, MAT_KHAU, HO_KHACH_HANG, TEN_KHACH_HANG, SO_DIEN_THOAI, GIOI_TINH, NGAY_SINH, 
    DIEM_TICH_LUY, LOAI_KHACH_HANG, ENABLED, DIA_CHI_1, DIA_CHI_2, THANHPHO_TINH)
	VALUES 
    (V_DIA_CHI_EMAIL, V_MK, V_HO_KH, V_TEN_KH, V_SODT, 'Nam', '2000-1-1', 
    0, 'Khách hàng bình thường', 1, V_DIA_CHI_1, V_DIA_CHI_2, V_TP);
    
    INSERT INTO GIO_HANG (MA_KHACH_HANG, TONG_TIEN) VALUES (LAST_INSERT_ID(), 0);
END //

-- 16. Cập nhật thông tin khách hàng (CHO KHACH_HANG)
CREATE PROCEDURE STP_UPDATE_KHACHHANG (
	IN V_MA_KH INT,
	IN V_HO_KH NVARCHAR(50) ,
	IN V_TEN_KH NVARCHAR(50) ,
	IN V_SODT CHAR(9) ,
	IN V_GIOI_TINH NVARCHAR(5) ,
	IN V_NGAY_SINH DATE ,
	IN V_MK VARCHAR(50),
	IN V_DIA_CHI_1 VARCHAR(64),
    IN V_DIA_CHI_2 VARCHAR(64),
    IN V_TP VARCHAR(45)
    )
BEGIN
	UPDATE KHACH_HANG 
    SET MAT_KHAU = V_MK, HO_KHACH_HANG = V_HO_KH, TEN_KHACH_HANG = V_TEN_KH, 
		SO_DIEN_THOAI = V_SODT, GIOI_TINH = V_GIOI_TINH, NGAY_SINH = V_NGAY_SINH, 
        DIA_CHI_1 = V_DIA_CHI_1, DIA_CHI_2 = V_DIA_CHI_2, THANHPHO_TINH = V_TP
    WHERE MA_KHACH_HANG = V_MA_KH;
END //

-- 17. Tạo mới đơn hàng (CHO DON_HANG)
CREATE PROCEDURE STP_INSERT_DONHANG (IN V_MA_KH INT)
BEGIN
	
    INSERT INTO DON_HANG (MA_THANH_TOAN, MA_KHACH_HANG, MA_DIA_CHI, TRI_GIA, MA_TINH_TRANG)
		VALUES (NULL, V_MA_KH, NULL, 0, 'Chưa thanh toán');
END //

-- 18. SET thanh toán cho đơn hàng  (CHO THANH_TOAN, DON_HANG)
CREATE PROCEDURE STP_SET_THANHTOAN_DONHANG (
	IN V_MADH INT, 
	IN V_LOAI_TT NVARCHAR(50), 
    IN V_BENTHUBA NVARCHAR(50), 
    IN V_SO_TK CHAR(20), 
    IN V_NGAY_HET_HAN DATETIME
    )
BEGIN
	DECLARE V_MA_KH INT;
    SELECT DON_HANG.MA_KHACH_HANG
    INTO V_MA_KH
    FROM KHACH_HANG, DON_HANG
    WHERE MA_DON_HANG = V_MADH
		AND DON_HANG.MA_KHACH_HANG = KHACH_HANG.MA_KHACH_HANG;
        
	IF V_LOAI_TT = 'Thanh toán khi nhận hàng' THEN
		INSERT INTO THANH_TOAN (MA_KHACH_HANG, LOAI_THANH_TOAN) VALUES (V_MA_KH, 'Thanh toán khi nhận hàng');
        
        UPDATE DON_HANG
        SET MA_THANH_TOAN = LAST_INSERT_ID()
        WHERE MA_DON_HANG = V_MADH;
	ELSEIF V_LOAI_TT = 'Thanh toán trực tuyến' THEN
		INSERT INTO THANH_TOAN (MA_KHACH_HANG, LOAI_THANH_TOAN, BEN_THU_BA, SO_TAI_KHOAN, NGAY_HET_HAN)
			VALUES (V_KH, 'Thanh toán trực tuyến', V_BENTHUBA, V_SO_TK, V_NGAY_HET_HAN);
            
		UPDATE DON_HANG
        SET MA_THANH_TOAN = LAST_INSERT_ID()
        WHERE MA_DON_HANG = V_MADH;
    END IF;
END //

-- Sử dụng để cập nhật địa chỉ cho đơn hàng khi khách hàng muốn giao ở địa chỉ khác
-- 19. Xét địa chỉ đơn hàng (CHO DON_HANG)
CREATE PROCEDURE STP_SET_DIACHI_DONHANG(
	IN V_MADH INT,
	IN V_MA_DIA_CHI INT
    )
BEGIN
	UPDATE DON_HANG
	SET MA_DIA_CHI = V_MA_DIA_CHI
	WHERE MA_DON_HANG = V_MADH;
END //

-- 20. Áp dụng mã giảm giá vào giỏ hàng (gọi mỗi khi khách hàng nhập mã giảm giá) (CHO DON_HANG, VOUCHER)
CREATE PROCEDURE STP_APDUNG_MAGIAMGIA(
    IN V_MADH INT,
    IN V_MAGG CHAR(8)
    )
BEGIN
	DECLARE V_COUNT INT;
    DECLARE V_EXPIRATION DATETIME;
    DECLARE V_DISCOUNT FLOAT;
    
    DECLARE EXIT HANDLER FOR 1062
		BEGIN
            ROLLBACK;
            RESIGNAL SET MESSAGE_TEXT = 'Mã giảm giá đã được sử dụng cho đơn hàng này!';
        END;
	START TRANSACTION;
    
		SET V_COUNT = (SELECT COUNT(*)
					   FROM VOUCHER
					   WHERE MA_GIAM_GIA = V_MAGG);
        
        IF V_COUNT = 1 THEN
			SELECT NGAY_HET_HAN
			INTO V_EXPIRATION
			FROM VOUCHER
			WHERE MA_GIAM_GIA = V_MAGG;
        
			IF NOW() < V_EXPIRATION THEN
				SELECT PHAN_TRAM_GIAM_GIA
                INTO V_DISCOUNT
                FROM VOUCHER
                WHERE MA_GIAM_GIA = V_MAGG;
                
                INSERT INTO VOUCHER_DH (MA_DH, MA_VOUCHER)
				VALUES (V_MADH, V_MAGG);
                
			ELSE SIGNAL SQLSTATE '45002'
				SET MESSAGE_TEXT = 'Mã giảm giá hết hạn!';
			END IF;
		ELSE SIGNAL SQLSTATE '45001'
			SET MESSAGE_TEXT = 'Mã giảm giá không hợp lệ!';
		END IF;
    COMMIT;
END //

-- 21. Tính tổng tiên thanh toán (CHO DON_HANG)
CREATE PROCEDURE STP_GET_TONG_THANH_TOAN (
	IN V_MADH INT,
    IN V_MAKH INT,
    OUT V_TONGTT FLOAT
)
BEGIN
	DECLARE V_TONG_TIEN_HANG FLOAT;
    DECLARE V_MAGG INT;
    DECLARE V_PHAN_TRAM_GIAM_GIA FLOAT;
    DECLARE V_LOAI_KH NVARCHAR(50);
    
	DECLARE done INT DEFAULT FALSE;
    DECLARE VOUCHER_CURSOR CURSOR FOR
		SELECT MA_VOUCHER
        FROM VOUCHER_DH
        WHERE MA_DH = V_MADH;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    SELECT LOAI_KHACH_HANG
    INTO V_LOAI_KH
    FROM KHACH_HANG KH, GIO_HANG GH
    WHERE GH.MA_KHACH_HANG = V_MAKH
		AND GH.MA_KHACH_HANG = KH.MA_KHACH_HANG;
	
    SET V_TONGTT = 0;
    SET V_TONG_TIEN_HANG = 0;
    
    -- Tính tổng tiền giỏ hàng
    CALL STP_TINH_TONG_CTGH(V_MAGH, V_TONG_TIEN_HANG);
    
    -- Tổng tiền dự kiến
    SET V_TONGTT = 20000 + V_TONG_TIEN_HANG;
    
    OPEN VOUCHER_CURSOR;
    
    getMAGG: LOOP
		FETCH VOUCHER_CURSOR INTO V_MAGG;
        IF done THEN LEAVE getMAGG;
        END IF;
        
        SELECT PHAN_TRAM_GIAM_GIA INTO V_PHAN_TRAM_GIAM_GIA
        FROM VOUCHER
        WHERE MA_GIAM_GIA = V_MAGG;
        
        -- Với mỗi mã giảm giá áp dụng thì tính tổng chi phí dự kiến mới
        SET V_TONGTT = V_TONGTT * (1 - V_PHAN_TRAM_GIAM_GIA);
        
    END LOOP getMAGG;
    CLOSE VOUCHER_CURSOR;
    
	-- Giảm giá cho các tệp khách hàng khác nhau để cho ra tổng chi phí cần thanh toán
	IF V_LOAI_KH = 'Khách hàng VIP' THEN
		SET V_TONGTT = V_TONGTT * 0.95;
	ELSEIF V_LOAI_KH = 'Khách hàng thân thiết' THEN
		SET V_TONGTT = V_TONGTT * 0.98;
    END IF;
END //

-- 22. Chuyển từ giỏ hàng sang đơn hàng (CHO DON_HANG, GIO_HANG)
CREATE PROCEDURE STP_XU_LY_DAT_HANG (IN V_MAKH INT, IN V_MADH INT)
BEGIN
	
    DECLARE V_TONG_THANH_TOAN FLOAT;
    
	DECLARE V_MASP INT;
    DECLARE V_SL INT;
    DECLARE done INT DEFAULT FALSE;
    DECLARE GH_CURSOR CURSOR FOR
		SELECT MA_SP, SO_LUONG
        FROM CTGH
        WHERE MA_KH = V_MAKH;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
     
	-- Tính tổng thanh toán của đơn hàng
    CALL STP_GET_TONG_THANH_TOAN(V_MADH, V_MAKH, V_TONG_THANH_TOAN);
    
    -- Chuyển các chi tiết giỏ hàng sang chi tiết đơn hàng
    OPEN GH_CURSOR;
    
    getCTGH: LOOP
		FETCH GH_CURSOR INTO V_MASP, V_SL;
        IF done THEN LEAVE getCTGH;
        END IF;
        
        INSERT INTO CTDH (MA_DH, MA_SP, SO_LUONG)
		VALUES (V_MADH, V_MASP, V_SL);

    END LOOP getCTGH;
    CLOSE GH_CURSOR;
    
    -- Xóa các chi tiết giỏ hàng
    DELETE FROM CTGH
	WHERE MA_KH = V_MAKH;
    
    -- cập nhật trị giá của đơn hàng
    UPDATE DON_HANG
    SET TRI_GIA = V_TONG_THANH_TOAN
    WHERE MA_DON_HANG = V_MADH;
    
END //

-- 23. Thống kê doanh thu ngày (CHO DON_HANG)
CREATE PROCEDURE STP_NGAY_DOANH_THU(IN v_revenue_date DATE, OUT  DOANH_THU DECIMAL(19,2))
sp: BEGIN
    DECLARE LOI VARCHAR(100);
    DECLARE YEAR_INPUT INT;
    DECLARE YEAR_CUR INT;
    
    SET SESSION sql_mode = 'STRICT_TRANS_TABLES';
    
    IF v_revenue_date IS NULL THEN
        SET LOI = "Ngày truyền vào không được null.";
        SELECT LOI AS `Lỗi`;
        LEAVE sp;
    END IF;
    
    SET YEAR_INPUT = YEAR(v_revenue_date);
    SET YEAR_CUR = YEAR(CURDATE());
    
    IF YEAR_INPUT > YEAR_CUR THEN
        SET LOI = CONCAT("Chưa có dữ liệu của năm ", YEAR_INPUT);
        SELECT LOI AS `Lỗi`;
        LEAVE sp;
    END IF;
    
    SET DOANH_THU = (
        SELECT COALESCE(SUM(TRI_GIA), 0)
        FROM DON_HANG
        WHERE DATE(NGAY_LAP) = v_revenue_date
    );
    
    IF DOANH_THU = 0 THEN
        SET LOI = CONCAT('Không có doanh thu trong ngày ', revenue_date);
        SELECT LOI AS `Lỗi`;
        LEAVE sp;
    END IF;
END //

-- 24. Thống kê doanh thu của một tháng cụ thể (CHO DON_HANG)
CREATE PROCEDURE STP_THANG_DOANHTHU (IN MONTH_IN INT, IN YEAR_IN INT, OUT DOANH_THU DECIMAL(19,4))
sp: BEGIN
    DECLARE LOI VARCHAR(100);
    DECLARE YEAR_CUR INT;
    
    IF MONTH_IN < 1 OR MONTH_IN > 12 THEN
		SET LOI = 'Sai định dạng tháng!';
        SELECT LOI AS `Lỗi`;
        LEAVE sp;
    END IF;
    
    SET YEAR_CUR = YEAR(CURDATE());
    
    IF YEAR_IN > YEAR_CUR THEN
        SET LOI = CONCAT('Chưa có dữ liệu năm ', YEAR_IN);
        SELECT LOI AS `Lỗi`;
        LEAVE sp;
    END IF;
    
     SET DOANH_THU = (
        SELECT COALESCE(SUM(TRI_GIA), 0)
        FROM DON_HANG
        WHERE MONTH(NGAY_LAP) = MONTH_IN
			AND YEAR(NGAY_LAP) = YEAR_IN
		);
        
	 IF DOANH_THU = 0 THEN
        SET LOI = CONCAT('Không có doanh thu trong tháng ', MONTH_IN,'/',YEAR_IN);
        SELECT LOI AS `Lỗi`;
        LEAVE sp;
    END IF;
END //
 
-- 25. Thống kê doanh thu năm (CHO DON_HANG)
CREATE PROCEDURE STP_NAM_DOANHTHU (IN YEAR_IN INT, OUT DOANH_THU DECIMAL(19,4))
sp: BEGIN
    DECLARE LOI VARCHAR(100);
    DECLARE YEAR_CUR INT;
    
    SET YEAR_CUR = YEAR(CURDATE());
    
    IF YEAR_IN > YEAR_CUR THEN
        SET LOI = CONCAT('Chưa có dữ liệu năm ', YEAR_IN);
        SELECT LOI AS `Lỗi`;
        LEAVE sp;
    END IF;
    
     SET DOANH_THU = (
        SELECT COALESCE(SUM(TRI_GIA), 0)
        FROM DON_HANG
        WHERE YEAR(NGAY_LAP) = YEAR_IN
		);
	
     IF DOANH_THU = 0 THEN
        SET LOI = CONCAT('Không có doanh thu trong năm ', YEAR_IN);
        SELECT LOI AS `Lỗi`;
        LEAVE sp;
    END IF;
END //
delimiter ; 